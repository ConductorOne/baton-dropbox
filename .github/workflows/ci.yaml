name: ci
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=3m

  go-test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: go tests
        run: (set -o pipefail && go test -v -covermode=count -json ./... | tee test.json)
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: test.json

  test-groups:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_REFRESH_TOKEN: ${{ secrets.BATON_REFRESH_TOKEN }}
      BATON_APP_KEY: ${{ secrets.BATON_APP_KEY }}
      BATON_APP_SECRET: ${{ secrets.BATON_APP_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build baton-dropbox
        run: go build ./cmd/baton-dropbox
      - name: Grant/revoke group test
        uses: ConductorOne/github-workflows/actions/sync-test@v2
        with:
          connector: ./baton-dropbox
          baton-entitlement: "${{ vars.TEST_GROUP_ENTITLEMENT }}"
          baton-principal: "${{ vars.TEST_GROUP_PRINCIPAL }}"
          baton-principal-type: "${{ vars.TEST_GROUP_PRINCIPAL_TYPE }}"

  test-roles:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_REFRESH_TOKEN: ${{ secrets.BATON_REFRESH_TOKEN }}
      BATON_APP_KEY: ${{ secrets.BATON_APP_KEY }}
      BATON_APP_SECRET: ${{ secrets.BATON_APP_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build baton-dropbox
        run: go build ./cmd/baton-dropbox
      - name: Grant/revoke role test
        uses: ConductorOne/github-workflows/actions/sync-test@v2
        with:
          connector: ./baton-dropbox
          baton-entitlement: "${{ vars.TEST_ROLE_ENTITLEMENT }}"
          baton-principal: "${{ vars.TEST_ROLE_PRINCIPAL }}"
          baton-principal-type: "${{ vars.TEST_ROLE_PRINCIPAL_TYPE }}"

  test-account-provisioning:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_REFRESH_TOKEN: ${{ secrets.BATON_REFRESH_TOKEN }}
      BATON_APP_KEY: ${{ secrets.BATON_APP_KEY }}
      BATON_APP_SECRET: ${{ secrets.BATON_APP_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build baton-dropbox
        run: go build ./cmd/baton-dropbox
      - name: Test account provisioning
        uses: ConductorOne/github-workflows/actions/account-provisioning@v3
        with:
          connector: ./baton-dropbox
          account-email: "${{ vars.TEST_ACCOUNT_EMAIL }}"
          search-method: "email"

  test-actions:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_REFRESH_TOKEN: ${{ secrets.BATON_REFRESH_TOKEN }}
      BATON_APP_KEY: ${{ secrets.BATON_APP_KEY }}
      BATON_APP_SECRET: ${{ secrets.BATON_APP_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build baton-dropbox
        run: go build ./cmd/baton-dropbox
      - name: Get baton
        uses: ConductorOne/github-workflows/actions/get-baton@v2
      - name: Sync to get user list
        run: ./baton-dropbox
      - name: Test disable user action
        run: |
          ./baton-dropbox --invoke-action=disable_user --invoke-action-args='{"user_id": "${{ vars.TEST_ACTION_USER_ID }}"}'
      - name: Test enable user action
        run: |
          ./baton-dropbox --invoke-action=enable_user --invoke-action-args='{"user_id": "${{ vars.TEST_ACTION_USER_ID }}"}'
